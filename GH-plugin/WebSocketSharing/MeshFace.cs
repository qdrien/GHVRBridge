// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GrasshopperVRBridge.IO
{

using global::System;
using global::FlatBuffers;

public struct MeshFace : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MeshFace GetRootAsMeshFace(ByteBuffer _bb) { return GetRootAsMeshFace(_bb, new MeshFace()); }
  public static MeshFace GetRootAsMeshFace(ByteBuffer _bb, MeshFace obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MeshFace __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bool IsQuad { get { int o = __p.__offset(4); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int A { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int B { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int C { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int D { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<MeshFace> CreateMeshFace(FlatBufferBuilder builder,
      bool isQuad = false,
      int a = 0,
      int b = 0,
      int c = 0,
      int d = 0) {
    builder.StartObject(5);
    MeshFace.AddD(builder, d);
    MeshFace.AddC(builder, c);
    MeshFace.AddB(builder, b);
    MeshFace.AddA(builder, a);
    MeshFace.AddIsQuad(builder, isQuad);
    return MeshFace.EndMeshFace(builder);
  }

  public static void StartMeshFace(FlatBufferBuilder builder) { builder.StartObject(5); }
  public static void AddIsQuad(FlatBufferBuilder builder, bool isQuad) { builder.AddBool(0, isQuad, false); }
  public static void AddA(FlatBufferBuilder builder, int a) { builder.AddInt(1, a, 0); }
  public static void AddB(FlatBufferBuilder builder, int b) { builder.AddInt(2, b, 0); }
  public static void AddC(FlatBufferBuilder builder, int c) { builder.AddInt(3, c, 0); }
  public static void AddD(FlatBufferBuilder builder, int d) { builder.AddInt(4, d, 0); }
  public static Offset<MeshFace> EndMeshFace(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MeshFace>(o);
  }
};


}
