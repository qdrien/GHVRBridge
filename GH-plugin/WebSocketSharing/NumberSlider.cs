// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace GrasshopperVRBridge.IO
{

using global::System;
using global::FlatBuffers;

public struct NumberSlider : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static NumberSlider GetRootAsNumberSlider(ByteBuffer _bb) { return GetRootAsNumberSlider(_bb, new NumberSlider()); }
  public static NumberSlider GetRootAsNumberSlider(ByteBuffer _bb, NumberSlider obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public NumberSlider __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
  public string Guid { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetGuidBytes() { return __p.__vector_as_arraysegment(6); }
  public float Value { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public Accuracy Accuracy { get { int o = __p.__offset(10); return o != 0 ? (Accuracy)__p.bb.GetSbyte(o + __p.bb_pos) : Accuracy.Float; } }
  public float Min { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Max { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Epsilon { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public short DecimalPlaces { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }

  public static Offset<NumberSlider> CreateNumberSlider(FlatBufferBuilder builder,
      StringOffset nameOffset = default(StringOffset),
      StringOffset guidOffset = default(StringOffset),
      float value = 0.0f,
      Accuracy accuracy = Accuracy.Float,
      float min = 0.0f,
      float max = 0.0f,
      float epsilon = 0.0f,
      short decimal_places = 0) {
    builder.StartObject(8);
    NumberSlider.AddEpsilon(builder, epsilon);
    NumberSlider.AddMax(builder, max);
    NumberSlider.AddMin(builder, min);
    NumberSlider.AddValue(builder, value);
    NumberSlider.AddGuid(builder, guidOffset);
    NumberSlider.AddName(builder, nameOffset);
    NumberSlider.AddDecimalPlaces(builder, decimal_places);
    NumberSlider.AddAccuracy(builder, accuracy);
    return NumberSlider.EndNumberSlider(builder);
  }

  public static void StartNumberSlider(FlatBufferBuilder builder) { builder.StartObject(8); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddGuid(FlatBufferBuilder builder, StringOffset guidOffset) { builder.AddOffset(1, guidOffset.Value, 0); }
  public static void AddValue(FlatBufferBuilder builder, float value) { builder.AddFloat(2, value, 0.0f); }
  public static void AddAccuracy(FlatBufferBuilder builder, Accuracy accuracy) { builder.AddSbyte(3, (sbyte)accuracy, 0); }
  public static void AddMin(FlatBufferBuilder builder, float min) { builder.AddFloat(4, min, 0.0f); }
  public static void AddMax(FlatBufferBuilder builder, float max) { builder.AddFloat(5, max, 0.0f); }
  public static void AddEpsilon(FlatBufferBuilder builder, float epsilon) { builder.AddFloat(6, epsilon, 0.0f); }
  public static void AddDecimalPlaces(FlatBufferBuilder builder, short decimalPlaces) { builder.AddShort(7, decimalPlaces, 0); }
  public static Offset<NumberSlider> EndNumberSlider(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<NumberSlider>(o);
  }
};


}
